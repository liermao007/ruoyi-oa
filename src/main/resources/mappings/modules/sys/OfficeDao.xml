<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.sys.dao.OfficeDao">

    <sql id="officeColumns">
		a.id,
		a.parent_id AS "parent.id",
		a.parent_ids  as  "parentIds",
		a.area_id AS "area.id",
		a.code   AS "code",
		a.name,
		a.sort,
		a.type,
		a.grade,
		a.address, 
		a.zip_code, 
		a.master, 
		a.phone, 
		a.fax, 
		a.email, 
		a.remarks,
		a.create_by AS "createBy.id",
		a.create_date,
		a.update_by AS "updateBy.id",
		a.update_date,
		a.del_flag,
		a.useable AS useable,
		a.primary_person AS "primaryPerson.id",
		a.deputy_person AS "deputyPerson.id",
		p.name AS "parent.name",
		ar.name AS "area.name",
		ar.parent_ids AS "area.parentIds",
		pp.name AS "primaryPerson.name",
		dp.name AS "deputyPerson.name"
	</sql>

    <sql id="officeJoins">
		LEFT JOIN sys_office p ON p.id = a.parent_id
		LEFT JOIN sys_area ar ON ar.id = a.area_id
		LEFT JOIN SYS_USER pp ON pp.id = a.primary_person
		LEFT JOIN SYS_USER dp ON dp.id = a.deputy_person
    </sql>

    <select id="get" resultType="Office">
        SELECT
        <include refid="officeColumns"/>
        FROM sys_office a
        <include refid="officeJoins"/>
        WHERE a.id = #{id}
    </select>

    <select id="findList" resultType="Office">
        SELECT
        <include refid="officeColumns"/>
        FROM sys_office a
        <include refid="officeJoins"/>
        WHERE a.del_flag = #{DEL_FLAG_NORMAL}
        <!-- 数据范围过滤 -->
        ${sqlMap.dsf}
        OR a.id = #{currentUser.office.id}
        ORDER BY a.code
    </select>

    <select id="findAllList" resultType="Office">
        SELECT
        <include refid="officeColumns"/>
        FROM sys_office a
        <include refid="officeJoins"/>
        WHERE a.del_flag = #{DEL_FLAG_NORMAL}
        ORDER BY a.code
    </select>

    <select id="findByParentIdsLike" resultType="Office">
        SELECT
        a.id,
        a.parent_id AS "parent.id",
        a.parent_ids,
        a. CODE,
        a. NAME,
        a.sort,
        a.type,
        a.grade,
        a.address,
        a.useable AS useable,
        p. NAME AS "parent.name",
        ar.parent_ids AS "area.parentIds"
        FROM sys_office a
       LEFT JOIN sys_office p ON p.id = a.parent_id
       LEFT JOIN sys_area ar ON ar.id = a.area_id
        WHERE a.del_flag = #{DEL_FLAG_NORMAL}

        <if test="parentIds != null and parentIds != ''">
            AND  a.parent_ids LIKE #{parentIds}
        </if>
        order by a.code
    </select>

    <select id="findByCompany" resultType="Office">
        SELECT
        d.*
        FROM
        (SELECT
        SUBSTRING(
        a.`PARENT_IDS`,
        LOCATE(#{parentIds}, a.parent_ids) + LENGTH(#{companyId}) + 2,
        LENGTH(a.`PARENT_IDS`)
        ) pidlast,
        a.id,
        a.parent_id AS "parent.id",
        a.parent_ids,
        a. CODE,
        a. NAME,
        a.sort,
        a.type,
        a.grade,
        a.address,
        a.useable AS useable,
        p. NAME AS "parent.name"
        FROM
        sys_office a
        LEFT JOIN sys_office p ON p.id = a.parent_id
        WHERE LOCATE(#{parentIds}, a.parent_ids) > 0) d
        WHERE (
        d.pidlast = ''
        OR SUBSTR(d.pidlast, 1, LENGTH(#{companyId})) = #{companyId}
        )
        AND TYPE != '1'
        UNION
        ALL
        SELECT
        d.*
        FROM
        (SELECT
        SUBSTRING(
        a.`PARENT_IDS`,
        LOCATE(#{code}, a.parent_ids) + 1,
        LENGTH(a.`PARENT_IDS`)
        ) pidlast,
        a.id,
        a.parent_id AS "parent.id",
        a.parent_ids,
        a. CODE,
        a. NAME,
        a.sort,
        a.type,
        a.grade,
        a.address,
        a.useable AS useable,
        p. NAME AS "parent.name"
        FROM
        sys_office a
        LEFT JOIN sys_office p ON p.id = a.parent_id
        WHERE LOCATE(#{parentIds}, a.parent_ids)  &lt;=  0
        AND LOCATE(#{code}, a.parent_ids) > 0) d
        WHERE SUBSTR(d.pidlast, 1, LENGTH(#{companyId})) = #{companyId}
    </select>

    <select id="findOfficeUserTreeData" resultType="Office">
        SELECT
            a.id,
            a.parent_id AS "parent.id",
            a.parent_ids,
            a. CODE,
            a. NAME,
            a.sort,
            a.type,
            a.grade,
            a.address,
            a.useable AS useable,
            p. NAME AS "parent.name",
            ar.parent_ids AS "area.parentIds"
        FROM sys_office a
        LEFT JOIN sys_office p ON p.id = a.parent_id
        LEFT JOIN sys_area ar ON ar.id = a.area_id
        WHERE a.del_flag = '0' AND a.parent_ids LIKE #{parentIds}

		UNION ALL

        SELECT u.id,
            u.office_id AS "parent.id",
            '' AS "parent_ids",
            u.no AS CODE,
            u.name,
            u.phone sort,
            u.user_type TYPE,
            u.grade,
            '' address ,
            '1' useable,
            o.name AS "parent.name",
            '' AS "area.parentIds"
        FROM sys_user u,sys_office o
        WHERE u.del_flag = '0'
            AND u.office_id IN(
                SELECT
                a.id
                FROM sys_office a
                WHERE a.del_flag = '0' AND a.parent_ids LIKE #{parentIds}
            )
            AND o.id = u.office_id
    </select>

    <!-- 根据机构id查询当前机构下的部门 -->
    <select id="findOfficeByOrgId" resultType="User" parameterType="User">
        SELECT
              *
            FROM
              sys_office
            WHERE parent_id IN
              (SELECT
                id
              FROM
                sys_office
              WHERE parent_id = #{parentId}
                AND TYPE = '2'
                AND id NOT IN
                (SELECT
                  id
                FROM
                  sys_office
                WHERE id LIKE '%admin'))  OR parent_id=#{parentId} AND id LIKE concat('%',#{parentId},'%') AND id NOT LIKE '%admin%'  ORDER BY sort
    </select>

    <!-- 根据机构id查询当前机构以及所有的下属机构 -->
    <select id="findCompany" resultType="User" parameterType="User">
        select
          *
          from
          sys_office
          where type = '1'
          and (parent_ids LIKE concat('%',#{parentId},'%')
          or id = #{parentId})
           and del_flag='0'
          ORDER BY sort
    </select>

    <select id="findCompanyById" resultType="Office" parameterType="Office">
        select
        *
        from
        sys_office
        where type = '1'
        and (parent_ids LIKE concat('%',#{parentId},'%')
        or id = #{parentId})
        and del_flag='0'
        ORDER BY sort
    </select>
    <select id="getIdByParentId" resultType="Office" parameterType="Office">
        SELECT
        id
        FROM sys_office WHERE parent_id =#{id}
    </select>

    <select id="findPhone" resultType="User" parameterType="User">
       SELECT b.id, b.name,b.phone,r.name as 'mobile' FROM sys_office a,sys_user b,sys_role r,sys_user_role ur
       WHERE b.office_id = a.id AND b.id = ur.user_id AND ur.role_id = r.id and b.del_flag='0' and b.office_id  in
        <foreach collection="officeId" item="officeId" index="index"
                 open="(" close=")" separator=",">
            #{officeId}
        </foreach>
        order by a.sort,b.no
    </select>

    <insert id="insert">
		INSERT INTO sys_office(
			id, 
			parent_id, 
			parent_ids, 
			area_id, 
			code, 
			name, 
			sort, 
			type, 
			grade, 
			address, 
			zip_code, 
			master, 
			phone, 
			fax, 
			email, 
			create_by, 
			create_date, 
			update_by, 
			update_date, 
			remarks, 
			del_flag,
			useable,
			primary_person,
			deputy_person
		) VALUES (
			#{id}, 
			#{parent.id}, 
			#{parentIds}, 
			#{area.id}, 
			#{code}, 
			#{name}, 
			#{sort}, 
			#{type}, 
			#{grade}, 
			#{address}, 
			#{zipCode}, 
			#{master}, 
			#{phone}, 
			#{fax}, 
			#{email}, 
			#{createBy.id}, 
			#{createDate}, 
			#{updateBy.id}, 
			#{updateDate}, 
			#{remarks}, 
			#{delFlag},
			#{useable},
			#{primaryPerson.id},
			#{deputyPerson.id}
		)
	</insert>

    <update id="update">
		UPDATE sys_office SET 
			parent_id = #{parent.id}, 
			parent_ids = #{parentIds}, 
			area_id = #{area.id}, 
			code = #{code}, 
			name = #{name}, 
			type = #{type}, 
			grade = #{grade}, 
			address = #{address}, 
			zip_code = #{zipCode}, 
			master = #{master}, 
			phone = #{phone}, 
			fax = #{fax}, 
			email = #{email}, 
			update_by = #{updateBy.id}, 
			update_date = #{updateDate}, 
			remarks = #{remarks},
			useable=#{useable},
			primary_person=#{primaryPerson.id},
			deputy_person=#{deputyPerson.id}
		WHERE id = #{id}
	</update>

    <update id="updateParentIds">
		UPDATE sys_office SET 
			parent_id = #{parent.id}, 
			parent_ids = #{parentIds}
		WHERE id = #{id}
	</update>

    <update id="delete">
        UPDATE sys_office SET
        del_flag = #{DEL_FLAG_DELETE}
        WHERE id = #{id} OR parent_ids LIKE
        <if test="dbName == 'oracle'">'%,'||#{id}||',%'</if>
        <if test="dbName == 'mssql'">'%,'+#{id}+',%'</if>
        <if test="dbName == 'mysql'">CONCAT('%,', #{id}, ',%')</if>
    </update>

</mapper>